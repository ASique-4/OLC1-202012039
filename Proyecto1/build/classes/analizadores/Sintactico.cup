package analizadores;
import java_cup.runtime.Symbol;


parser code 
{:
    /**
     * Método al que se llama automáticamente ante algún error sintactico.
     **/ 
    int erroresSintacticos = 0;
    public void syntax_error(Symbol s){ 
        erroresSintacticos++;
        //Imprimir error
        System.out.println("Error Sintáctico en la Línea " + (s.left) +
        " Columna "+s.right+ ". No se esperaba este componente: " +s.value+"."); 
    } 
    //Método que devuelve el número de errores sintácticos
    public int getErroresSintacticos(){
        return erroresSintacticos;
    }

    //Transformar IF a codigo Python
        public void transformarIf(Symbol s){
                System.out.println("if "+s.value+":");
                
        }
    
    /**
     * Método al que se llama automáticamente ante algún error sintáctico 
     * en el que ya no es posible una recuperación de errores.
     **/ 
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error síntactico irrecuperable en la Línea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    }  
:} 

terminal String tnum;
terminal String trest,tsum,tdiv,tmul,tpot,tmod, pare1, pare2, prInicio,prFin,
        tinterrogacioninicio,tinterrogacionfin,tcoma,tmayor, tcomentario, tcomentariovariaslineas,
        tpuntoycoma,prIngresar,prComo,prConValor,prSi,prEntonces,prFinSi,prO_Si,prDE_LO_CONTRARIO,prSegun,prHacer,prPara,
        prHasta,prFinPara,prCon,prIncremental,prMientras,prFinMientras,prRepetir,prHastaQue,prRetornar,prMetodo,
        prFinMetodo,prConParametros,prFuncion,prFinFuncion,prEjecutar,prImprimir,prImprimirNl,tigual,tvariable,tcadena,
        prString,prInt,prFinSegun,prDeLoContrario,palabra;           


non terminal INICIO;
non terminal String CONDICION;
non terminal String INSTRUCCIONES;
non terminal String INSTRUCCIONES_CICLO;
non terminal String INSTRUCCION;
non terminal String IF;
non terminal String VALOR;
non terminal String LISTA_NOMBRES;
non terminal String LISTA_NOMBRES2;
non terminal String VARIABLE;
non terminal String DECLARACION;
non terminal String COMENTARIO;
non terminal String COMENTARIO_VARIAS_LINEAS;
non terminal String E;
non terminal String ASIGNACION;
non terminal String DE_LO_CONTRARIO;
non terminal String EXPRESION;
non terminal String O_SI;
non terminal String SELECCION_MULTIPLE;
non terminal String SEGUN;
non terminal String FLECHA;
non terminal String PARA;
non terminal String PARA_SALTO;
non terminal String MIENTRAS;
non terminal String REPETIR;
non terminal String RETORNO;
non terminal String METODO;
non terminal String LISTA_PARAMETROS;
non terminal String FUNCION;
non terminal String EJECUTAR;
non terminal String IMPRIMIR;
non terminal String IMPRIMIR_NL;

precedence left tsum, trest;
precedence left tdiv, tmul;
precedence left tmod, tpot;

start with INICIO;

INICIO::= prInicio E prFin;

E::=    DECLARACION E
        |IF {:System.out.println("Se realizo un if");:} E
        |COMENTARIO {:System.out.println("Se realizo un comentar");:} E
        |COMENTARIO_VARIAS_LINEAS {:System.out.println("Se realizo un comentarioVariasLineas");:} E
        |ASIGNACION {:System.out.println("Se realizo un asignacion");:} E
        |SELECCION_MULTIPLE {:System.out.println("Se realizo un seleccionMultiple");:} E
        |PARA {:System.out.println("Se realizo un para");:} E
        |PARA_SALTO {:System.out.println("Se realizo un paraSalto");:} E
        |MIENTRAS {:System.out.println("Se realizo un mientras");:} E
        |REPETIR {:System.out.println("Se realizo un repetir");:} E
        |RETORNO {:System.out.println("Se realizo un retorno");:}E
        |METODO {:System.out.println("Se realizo un metodo");:}E
        |FUNCION {:System.out.println("Se realizo un funcion");:}E
        |EJECUTAR {:System.out.println("Se realizo un ejecutar");:}E
        |IMPRIMIR {:System.out.println("Se realizo un imprimir");:}E
        |IMPRIMIR_NL {:System.out.println("Se realizo un IMPRIMIR_NL");:} E
        |error E
        |;


DECLARACION::= prIngresar VARIABLE prComo palabra prConValor tcadena tpuntoycoma
                |prIngresar VARIABLE prComo palabra prConValor tnum tpuntoycoma
                |prIngresar LISTA_NOMBRES prComo palabra prConValor tnum tpuntoycoma
                |prIngresar LISTA_NOMBRES prComo palabra prConValor tcadena tpuntoycoma;
//Gramatica de un comentario
COMENTARIO::= tcomentario;
//Gramatica de un comentario de varias lineas
COMENTARIO_VARIAS_LINEAS::= tcomentariovariaslineas;                
//Gramatica de una asignacion
ASIGNACION::= VARIABLE FLECHA tcadena tpuntoycoma | LISTA_NOMBRES FLECHA tcadena tpuntoycoma
                | VARIABLE FLECHA tnum tpuntoycoma | LISTA_NOMBRES FLECHA tnum tpuntoycoma;
//Gramatica de seleccion multiple
SELECCION_MULTIPLE::= prSegun SEGUN prFinSegun;

SEGUN::= tinterrogacioninicio VALOR tinterrogacionfin prEntonces INSTRUCCIONES SEGUN
        |tinterrogacioninicio VALOR tinterrogacionfin prEntonces INSTRUCCIONES;

VALOR::= tvariable|tcadena;

LISTA_NOMBRES::= VARIABLE LISTA_NOMBRES2|;
LISTA_NOMBRES2::= tcoma VARIABLE LISTA_NOMBRES2|tcoma VARIABLE;

IF::= prSi CONDICION prEntonces E prFinSi 
        |prSi CONDICION prEntonces E O_SI prFinSi
        |prSi CONDICION prEntonces E DE_LO_CONTRARIO prFinSi
        |prSi CONDICION prEntonces E O_SI DE_LO_CONTRARIO prFinSi;

DE_LO_CONTRARIO::= prDE_LO_CONTRARIO E DE_LO_CONTRARIO|prDE_LO_CONTRARIO E;

O_SI::= prO_Si CONDICION prEntonces E O_SI|prO_Si CONDICION prEntonces E;

CONDICION::= tvariable:a tigual tigual tvariable:b {:System.out.println(a + "==" + b);:}|
            tvariable:a tigual tigual tcadena:b {:System.out.println(a + "==" + b);:}|
            tvariable:a tigual tigual tnum:b {:System.out.println(a + "==" + b);:};

VARIABLE::= tvariable;

INSTRUCCIONES::=  INSTRUCCION tpuntoycoma INSTRUCCIONES
                 |INSTRUCCION tpuntoycoma;
                 
INSTRUCCIONES_CICLO::= INSTRUCCIONES_CICLO INSTRUCCION tpuntoycoma
                       |INSTRUCCION tpuntoycoma
                       ;
INSTRUCCION::= VARIABLE tigual VALOR;

PARA::= prPara VARIABLE FLECHA tnum prHasta tnum prHacer INSTRUCCIONES_CICLO prFinPara;

FLECHA::= trest tmayor;

PARA_SALTO::= prPara VARIABLE FLECHA tnum prHasta tnum prCon prIncremental tnum prHacer INSTRUCCIONES_CICLO prFinPara;

MIENTRAS::= prMientras CONDICION prHacer INSTRUCCIONES_CICLO prFinMientras;

REPETIR::= prRepetir INSTRUCCIONES_CICLO prHasta CONDICION;

RETORNO::= prRetornar VALOR;

METODO::= prMetodo VARIABLE prConParametros LISTA_PARAMETROS prConValor VALOR prFinMetodo
                |prMetodo VARIABLE INSTRUCCIONES prFinMetodo;

LISTA_PARAMETROS::= VARIABLE tcadena LISTA_PARAMETROS|VARIABLE tcadena tcoma LISTA_PARAMETROS;


FUNCION::= prFuncion VARIABLE tcadena prConParametros LISTA_PARAMETROS INSTRUCCIONES prFinFuncion
                |prFuncion VARIABLE tcadena INSTRUCCIONES prFinFuncion;

EJECUTAR::= prEjecutar VARIABLE pare1 pare2 tpuntoycoma|prEjecutar VARIABLE pare1 LISTA_PARAMETROS pare2 tpuntoycoma;

IMPRIMIR::= prImprimir tcadena tpuntoycoma;

IMPRIMIR_NL::= prImprimirNl tcadena tpuntoycoma;